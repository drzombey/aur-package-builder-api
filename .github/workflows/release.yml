name: "Release Build Binary"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [ 'feature/add-docker-release-pipeline' ]
  release:
    types: [ created ]

jobs:
  releases-matrix:
    name: Release Go Binary for api
    runs-on: ubuntu-latest
    on:
      release:
        types: [ created ]
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm64 ]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S%z')"
      - uses: actions/checkout@v2
      - uses: wangyoucao577/go-release-action@v1.22
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          pre_command: export CGO_ENABLED=0
          project_path: "./cmd/api"
          extra_files: LICENSE
          ldflags: "-X 'main.BuildTime=${{ steps.date.outputs.date }}' -X 'main.BuildVersion=${{ github.ref_name }}'"
          binary_name: "aur-package-builder-api"
          overwrite: true
          retry: 8

  docker:
    name: Release Docker image for api
    runs-on: ubuntu-latest
    on:
      push:
        branches: [ 'feature/add-docker-release-pipeline' ]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
